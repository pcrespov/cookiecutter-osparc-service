image: itisfoundation/ubuntu-bionic-build-docker@sha256:eaafc56563db702281b4221108b0696967b7a621cf2e09579a7f12a799819a03
variables:
  # docker in docker variant, see https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#use-docker-in-docker-executor
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  # have some prefix so it may help for garbage collecting in the registry
  SC_CI_PROJECT_PATH_NAME: ci/$CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG
  SC_CI_TEST_IMAGE_PREFIX: $SC_CI_TESTING_REGISTRY/ci/$CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG
  SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION: services/{{ cookiecutter.project_slug }}
services:
   - docker:dind
before_script:
  - docker info

# --------------------------------------------------------------------------------------------
# ------- {{ cookiecutter.project_slug }}
# --------------------------------------------------------------------------------------------

{{ cookiecutter.project_slug }}-build:
  stage: build
  tags:
    - DOCKER_modern
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - cd $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY
    - make pull-latest || true
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make devenv
    - make build
    - make push-force
  only:
    refs:
      - branches
      - merge_requests
    changes:
      - "**/{{ cookiecutter.project_slug }}/**/*"
  environment:
    name: $CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG/{{ cookiecutter.project_slug }}
    on_stop: remove_{{ cookiecutter.project_slug }}_builds

remove_{{ cookiecutter.project_slug }}_builds:
  stage: build
  tags:
    - DOCKER_modern
  only:
    refs:
      - branches
      - merge_requests
  script:
    - export DOCKER_REGISTRY=$SC_CI_TESTING_REGISTRY
    - export DOCKER_PROJECT=$SC_CI_PROJECT_PATH_NAME/simcore/services/{%- if cookiecutter.project_type == "computational" -%}comp{%- elif cookiecutter.project_type == "dynamic" -%}dynamic{%- endif -%}/{{ cookiecutter.project_name.lower().replace(' ', '-') }}
    - export API_USER=$SC_CI_TESTING_REGISTRY_USER
    - export API_TOKEN=$SC_CI_TESTING_REGISTRY_PORTUS_TOKEN
    - bash $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION/ci/delete-image-from-registry-portus.bash # this will fail if registry is not available through Portus
  when: manual
  environment:
    name: $CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG/{{ cookiecutter.project_slug }}
    action: stop

{{ cookiecutter.project_slug }}-unit-test:
  stage: test
  needs: []
  tags:
    - DOCKER_modern
  script:
    - cd $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION
    - make devenv
    - make tests-unit
  only:
    refs:
      - branches
      - merge_requests
    changes:
      - "**/{{ cookiecutter.project_slug }}/**/*"
  artifacts:
    reports:
      junit:
        - $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION/pytest_unittest.xml
    paths:
      - $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION/pytest_unittest.xml

{{ cookiecutter.project_slug }}-integration-test:
  stage: test
  tags:
    - DOCKER_modern
  needs: ["{{ cookiecutter.project_slug }}-build"]
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - cd $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make pull-latest
    - make tag-local
    - make devenv
    - make tests-integration
  only:
    refs:
      - branches
      - merge_requests
    changes:
      - "**/{{ cookiecutter.project_slug }}/**/*"
  artifacts:
    reports:
      junit:
        - $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION/pytest_integrationtest.xml
    paths:
      - $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION/pytest_integrationtest.xml

{{ cookiecutter.project_slug }}-master:
  stage: deploy
  needs: ["{{ cookiecutter.project_slug }}-unit-test", "{{ cookiecutter.project_slug }}-integration-test"]
  tags:
    - DOCKER_modern
  only:
    refs:
      - master
    changes:
      - "**/{{ cookiecutter.project_slug }}/**/*"
  script:
    - echo "$SC_CI_TESTING_REGISTRY_PASSWORD" | docker login -u "$SC_CI_TESTING_REGISTRY_USER" --password-stdin $SC_CI_TESTING_REGISTRY
    - echo "$SC_CI_MASTER_REGISTRY_PASSWORD" | docker login -u "$SC_CI_MASTER_REGISTRY_USER" --password-stdin $SC_CI_MASTER_REGISTRY
    - cd $SC_CI_{{ cookiecutter.project_package_name.upper() }}_LOCATION
    - export DOCKER_REGISTRY=$SC_CI_TEST_IMAGE_PREFIX
    - make pull-latest
    - make tag-local
    - docker tag $SC_CI_TEST_IMAGE_PREFIX/{{ cookiecutter.project_name.lower().replace(' ', '-') }} $SC_CI_MASTER_REGISTRY/simcore/services/{%- if cookiecutter.project_type == "computational" -%}comp{%- elif cookiecutter.project_type == "dynamic" -%}dynamic{%- endif -%}/{{ cookiecutter.project_name.lower().replace(' ', '-') }}
    - export DOCKER_REGISTRY=$SC_CI_MASTER_REGISTRY/simcore/services/comp
    - make push
  environment:
    name: {{ cookiecutter.project_slug }}-master
    url: $SC_CI_MASTER_REGISTRY
